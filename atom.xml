<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-01-13T06:25:39.254Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zyz</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js 验证文件 file</title>
    <link href="http://yoursite.com/2018/01/08/js-file-verify/"/>
    <id>http://yoursite.com/2018/01/08/js-file-verify/</id>
    <published>2018-01-08T09:56:00.090Z</published>
    <updated>2018-01-13T06:25:39.254Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-js-验证文件-file-合法性"><a href="#1-js-验证文件-file-合法性" class="headerlink" title="1. js 验证文件 file 合法性"></a>1. js 验证文件 file 合法性</h2><blockquote><p>使用js验证input的file合法性。<br>比如宽、高、文件大小、后缀名等。<br>传参使用面向对象的思想。也就是自定义对象，把验证参数都放在一个对象里面。</p><blockquote><p>这里会一步步进行详解<br>最后，会贴出完整的代码。</p></blockquote></blockquote><h2 id="2-新建一个html页面和js文件"><a href="#2-新建一个html页面和js文件" class="headerlink" title="2. 新建一个html页面和js文件"></a>2. 新建一个html页面和js文件</h2><p>如图，新建两个文件，分别是 <font color="#ff4081"><code>index.html</code></font> 和 <font color="#ff4081"><code>file_verify.js</code></font><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/z-image/js-file-verify/20180108175207.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h2 id="3-编辑-index-html-页面"><a href="#3-编辑-index-html-页面" class="headerlink" title="3. 编辑 index.html 页面"></a>3. 编辑 <font color="#ff4081"><code>index.html</code></font> 页面</h2><ul><li><font color="blue">效果图如下</font><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/z-image/js-file-verify/20180109152942.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><ul><li><font color="blue">代码如下，后面将进行讲解。</font><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://code.jquery.com/jquery-1.4.1.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">验证上传文件的合法性写成单独的js</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/file_verify.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">function verifyFile(fileObj) &#123;</span></span><br><span class="line"><span class="undefined">debugger;</span></span><br><span class="line"><span class="undefined">var verify = &#123;</span></span><br><span class="line"><span class="undefined">maxWidth: 100,</span></span><br><span class="line"><span class="undefined">maxHeight: 100,</span></span><br><span class="line"><span class="undefined">maxSize: 1024,</span></span><br><span class="line"><span class="undefined">allowSuffixName: ["jpg", "png", "bmp"],</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined">//调用js</span></span><br><span class="line"><span class="undefined">file_verify(obj, verify);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">选择文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"uploadFile"</span> <span class="attr">onchange</span>=<span class="string">"verifyFile(this)"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-1-this-、-jQuery-获取-input-对象、-document-getElementById-quot-uploadFile-quot-之间的区别"><a href="#3-1-this-、-jQuery-获取-input-对象、-document-getElementById-quot-uploadFile-quot-之间的区别" class="headerlink" title="3.1 this 、 jQuery 获取 input 对象、 document.getElementById(&quot;uploadFile&quot;) 之间的区别"></a>3.1 <font color="#ff4081"><code>this</code></font> 、 <font color="#ff4081"><code>jQuery</code></font> 获取 <font color="#ff4081"><code>input</code></font> 对象、 <font color="#ff4081"><code>document.getElementById(&quot;uploadFile&quot;)</code></font> 之间的区别</h3><p>我们需要在 <font color="#ff4081"><code>input</code></font> 标签里面加上 <font color="#ff4081"><code>onchange</code></font> 事件。<br>如：<font color="#ff4081"><code>onchange=&quot;verifyFile(this)&quot;</code></font> 。<br>有时候，你不加 <font color="#ff4081"><code>onchange</code></font> 事件，用 <font color="#ff4081"><code>jQuery</code></font> 进行绑定一个事件或者获取这个 <font color="#ff4081"><code>input</code></font> 对象。</p><font color="blue">我将会使用下面<strong>代码</strong>进行验证。</font><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://code.jquery.com/jquery-1.4.1.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">function verifyFile(fileObj) &#123;</span></span><br><span class="line"><span class="undefined">    debugger;</span></span><br><span class="line"><span class="undefined">    var a = $("#uploadFile");</span></span><br><span class="line"><span class="undefined">var b = document.getElementById("uploadFile");</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">选择文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"uploadFile"</span> <span class="attr">onchange</span>=<span class="string">"verifyFile(this)"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>从上面代码可以看出，<font color="#ff4081"><code>verifyFile</code></font> 函数将会获取到<font color="blue">三个对象</font>，分别是<font color="#ff4081"><code>this</code></font>、<font color="#ff4081"><code>jq获取</code></font>、<font color="#ff4081"><code>document.getElementById()</code></font>。</p><h4 id="1-效果图如下"><a href="#1-效果图如下" class="headerlink" title="1). 效果图如下"></a><font color="red"><strong>1). 效果图如下</strong></font></h4><p><strong>从图中可以看出，<font color="#ff4081"><code>fileObj</code></font> 和 <font color="#ff4081"><code>b</code></font> 是一样的，说明<font color="#ff4081"><code>document.getElementById()</code></font> 和 <font color="#ff4081"><code>this</code></font> 是一样的，</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/z-image/js-file-verify/20180109160405.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="2-this-获取的对象如图"><a href="#2-this-获取的对象如图" class="headerlink" title="2). this 获取的对象如图"></a><font color="red"><strong>2). <code>this</code> 获取的对象如图</strong></font></h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/z-image/js-file-verify/20180109161141.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="3-jq-获取的对象如图"><a href="#3-jq-获取的对象如图" class="headerlink" title="3). jq 获取的对象如图"></a><font color="red"><strong>3). <code>jq</code> 获取的对象如图</strong></font></h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/z-image/js-file-verify/20180109161242.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/z-image/js-file-verify/20180109161302.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="4-document-getElementById-获取的对象如图"><a href="#4-document-getElementById-获取的对象如图" class="headerlink" title="4). document.getElementById() 获取的对象如图"></a><font color="red"><strong>4). <code>document.getElementById()</code> 获取的对象如图</strong></font></h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/z-image/js-file-verify/20180109161326.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><strong> 从上面三种获取<font color="#ff4081"><code>input</code></font>对象的函数可以看出，使用<font color="#ff4081"><code>jq获取</code></font>获取的对象，是一个<font color="#ff4081"><code>数组</code></font>，若想获取和<font color="#ff4081"><code>document.getElementById()</code></font>一样的对象，必须改写为<font color="#ff4081"><code>var a = $(&quot;#uploadFile&quot;)[0];</code></font>。如图</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/z-image/js-file-verify/20180109162106.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="3-2-定义（声明）验证变量"><a href="#3-2-定义（声明）验证变量" class="headerlink" title="3.2 定义（声明）验证变量"></a>3.2 定义（声明）验证变量</h3><p><strong><font color="bule">从这一小节开始，将进入正文。</font></strong><br>我们需要 定义（声明）一个验证变量，来存放一些规则，可以使得你选择的文件，是否符合这些规则。<br>如一开始所写的，其中有部分代码如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">verifyFile</span>(<span class="params">fileObj</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> verify = &#123;</span><br><span class="line">maxWidth: <span class="number">100</span>,</span><br><span class="line">maxHeight: <span class="number">100</span>,</span><br><span class="line">maxSize: <span class="number">1024</span>,</span><br><span class="line">allowSuffixName: [<span class="string">"jpg"</span>, <span class="string">"png"</span>, <span class="string">"bmp"</span>]</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p><p><code>verify</code> 验证变量，参数如下：</p><table><thead><tr><th style="text-align:center">参数名</th><th style="text-align:center">类型</th><th style="text-align:center">必要(Y/N)</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center"><font color="#ff4081"><code>maxWidth</code></font></td><td style="text-align:center"><font color="#ff4081"><code>int</code></font></td><td style="text-align:center">N</td><td>最大宽度，如果是图片的话</td></tr><tr><td style="text-align:center"><font color="#ff4081"><code>maxHeight</code></font></td><td style="text-align:center"><font color="#ff4081"><code>int</code></font></td><td style="text-align:center">N</td><td>最大高度，如果是图片的话</td></tr><tr><td style="text-align:center"><font color="#ff4081"><code>maxSize</code></font></td><td style="text-align:center"><font color="#ff4081"><code>int</code></font></td><td style="text-align:center">N</td><td>文件大小，KB即千字节为单位</td></tr><tr><td style="text-align:center"><font color="#ff4081"><code>allowSuffixName</code></font></td><td style="text-align:center"><font color="#ff4081"><code>String</code></font></td><td style="text-align:center">N</td><td>允许通过的后缀名格式，都为小写</td></tr></tbody></table><h2 id="4-编辑-file-verify-js"><a href="#4-编辑-file-verify-js" class="headerlink" title="4. 编辑 file_verify.js"></a>4. 编辑 <font color="#ff4081"><code>file_verify.js</code></font></h2><p><code>file_verify.js</code>，里面的函数，完全是根据<code>verify</code> 验证变量来编写的。<br>函数全部自定义。<br>以上面小节的<code>verify</code>为例，来编写<code>file_verify.js</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 外部调用的方法</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; fileObj 要验证的文件对象</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; verify  规则参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">file_verify</span>(<span class="params">fileObj, verify</span>) </span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line"><span class="keyword">var</span> v = <span class="keyword">new</span> VerifyObj(fileObj, verify);</span><br><span class="line"><span class="keyword">var</span> retArr = [];</span><br><span class="line"><span class="keyword">var</span> retFlag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> errorMsg = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; retFlag; i++) &#123;</span><br><span class="line"><span class="keyword">switch</span> (i)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">retArr = v.hasFile();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">retArr = v.suffixByAllow();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">retArr = [<span class="literal">false</span>, <span class="string">""</span>];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">retFlag = retArr[<span class="number">0</span>];</span><br><span class="line">errorMsg = retArr[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (errorMsg != <span class="string">""</span>) &#123;</span><br><span class="line"><span class="comment">//清空文件</span></span><br><span class="line">fileObj.outerHTML = fileObj.outerHTML;</span><br><span class="line">alert(errorMsg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义验证对象，设置属性和方法</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; fileObj 要验证的文件对象</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; verify  规则参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">VerifyObj</span>(<span class="params">fileObj, verify</span>) </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.fileObj = fileObj;</span><br><span class="line"><span class="keyword">this</span>.verify = verify;</span><br><span class="line">&#125;</span><br><span class="line">VerifyObj.prototype = &#123;</span><br><span class="line"><span class="keyword">constructor</span> : VerifyObj,</span><br><span class="line">//是否有文件</span><br><span class="line">hasFile : function() &#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line"><span class="keyword">return</span> [<span class="keyword">this</span>.fileObj.files.length &gt; <span class="number">0</span> ? <span class="literal">true</span> : <span class="literal">false</span>,<span class="string">""</span>];</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//允许通过的后缀名</span></span><br><span class="line">suffixByAllow : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line"><span class="keyword">var</span> allow = <span class="keyword">this</span>.verify.allowSuffixName;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.isEmpty(allow)) &#123;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">true</span>, <span class="string">""</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> filename = <span class="keyword">this</span>.fileObj.files[<span class="number">0</span>].name;</span><br><span class="line"><span class="keyword">var</span> suffix = filename.substr(filename.lastIndexOf(<span class="string">"."</span>)+<span class="number">1</span>).toLowerCase();</span><br><span class="line"><span class="keyword">var</span> index = jQuery.inArray(suffix, allow);</span><br><span class="line"><span class="keyword">return</span> index != <span class="number">-1</span> ? [<span class="literal">true</span>,<span class="string">""</span>] : [<span class="literal">false</span>,<span class="string">"文件不合法,暂只支持["</span> + allow.join(<span class="string">"、"</span>) + <span class="string">"]格式!"</span>];</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//是否为空</span></span><br><span class="line">isEmpty : <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> !isNotEmpty(str);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//是否不为空</span></span><br><span class="line">isNotEmpty : <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(str != <span class="literal">undefined</span> &amp;&amp; str != <span class="literal">null</span> &amp;&amp; str != <span class="string">''</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们自定义一个验证对象<code>VerifyObj</code>，把所有函数都定义在<code>VerifyObj.prototype</code>里面。<br>在<code>file_verify</code>函数里通过<code>new VerifyObj()</code>来创建这个对象。<br>目前，我们在<code>VerifyObj.prototype</code>定义了<code>三个</code>通用的函数：<code>isEmpty</code>、<code>isNotEmpty</code> 和 <code>hasFile</code>。<br><code>isEmpty</code> : 判断字符串是否为空，true为空，false不为空<br><code>isNotEmpty</code> : 判断字符串是否不为空，true不为空，false为空<br><code>hasFile</code> ： 判断是否有文件，true为有文件，false为没有文件</p><p><code>isEmpty</code>和<code>isNotEmpty</code>主要用于判断参数<code>verify</code>里面是否有定义某个属性。<br>比如，<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> verify = &#123;</span><br><span class="line">maxWidth: <span class="number">100</span>,</span><br><span class="line">maxHeight: <span class="number">100</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>我只定义了参数<code>maxWidth</code>和<code>maxHeight</code>，没有定义<code>allowSuffixName</code>。<br>像<code>VerifyObj.prototype</code>里的函数<code>suffixByAllow</code>，函数里面有这句代码<code>var allow = this.verify.allowSuffixName;</code>，它将返回<code>undefined</code>，如果你不做非空判断，那么后面的代码将会抛出异常。</p><p>在每一个定义的函数里面，最后都返回一个数组。<br>例如：<br><code>return index != -1 ? [true,&quot;&quot;] : [false,&quot;文件不合法,暂只支持[&quot; + allow.join(&quot;、&quot;) + &quot;]格式!&quot;];</code><br>数组第一个元素：<code>true or false</code>。<code>true</code> 表示文件符合当前函数定义的规则，反之不符合。<br>数组第二个元素：<code>文件不合法...</code> 表示为错误信息<code>errorMsg</code>。</p><h3 id="4-1-根据verify变量继续自定义函数-验证文件大小"><a href="#4-1-根据verify变量继续自定义函数-验证文件大小" class="headerlink" title="4.1 根据verify变量继续自定义函数:验证文件大小"></a>4.1 根据<code>verify</code>变量继续自定义函数:验证文件大小</h3><p>在<code>3.2小节</code>，我们定义了验证变量。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> verify = &#123;</span><br><span class="line">maxWidth: <span class="number">100</span>,</span><br><span class="line">maxHeight: <span class="number">100</span>,</span><br><span class="line">maxSize: <span class="number">1024</span>,</span><br><span class="line">allowSuffixName: [<span class="string">"jpg"</span>, <span class="string">"png"</span>, <span class="string">"bmp"</span>]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>在<code>4小节</code>，根据验证变量中<code>allowSuffixName</code>参数，在<code>VerifyObj.prototype</code>里定义函数<code>suffixByAllow</code>。<br>那么我们根据<code>size</code>来定制属于它们两个的函数。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">VerifyObj.prototype = &#123;</span><br><span class="line"><span class="keyword">constructor</span> : VerifyObj,</span><br><span class="line">//是否有文件</span><br><span class="line">hasFile : function() &#123;...&#125;,</span><br><span class="line"><span class="comment">//允许通过的后缀名</span></span><br><span class="line">suffixByAllow : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;...&#125;,</span><br><span class="line"><span class="comment">//是否为空</span></span><br><span class="line">isEmpty : <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;...&#125;,</span><br><span class="line"><span class="comment">//是否不为空</span></span><br><span class="line">isNotEmpty : <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;...&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>如上代码，我们打算加在<code>isNotEmpty</code>函数后面，<strong>注意：<code>isNotEmpty</code>的函数最后要加 <code>逗号&#39;,&#39;</code>。</strong><br>编写完成之后，像下面：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">VerifyObj.prototype = &#123;</span><br><span class="line">...</span><br><span class="line"><span class="comment">//是否不为空</span></span><br><span class="line">isNotEmpty : <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;...&#125;,</span><br><span class="line">fileSize : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line"><span class="keyword">var</span> maxSize = <span class="keyword">this</span>.verify.maxSize;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.isEmpty(maxSize)) &#123;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">true</span>, <span class="string">""</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//单位为字节，即B；size/1024转换为KB</span></span><br><span class="line"><span class="keyword">var</span> size = <span class="keyword">this</span>.fileObj.files[<span class="number">0</span>].size / <span class="number">1024</span>;</span><br><span class="line"><span class="keyword">if</span> (maxSize &lt; size) &#123;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">false</span>, <span class="string">"文件大小不能超过"</span> + maxSize + <span class="string">"KB"</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">true</span>, <span class="string">""</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>当然，这样还不行，你得要触发这个函数，所以你要在<code>file_verify</code>函数加上<code>case</code>语句。<br>如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">file_verify</span>(<span class="params">fileObj, verify</span>) </span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; retFlag; i++) &#123;</span><br><span class="line"><span class="keyword">switch</span> (i)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">...</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">...</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">retArr = v.fileSize();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">...</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">retFlag = retArr[<span class="number">0</span>];</span><br><span class="line">errorMsg = retArr[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="4-2-根据verify变量继续自定义函数-验证图片宽高"><a href="#4-2-根据verify变量继续自定义函数-验证图片宽高" class="headerlink" title="4.2 根据verify变量继续自定义函数:验证图片宽高"></a>4.2 根据<code>verify</code>变量继续自定义函数:验证图片宽高</h3><p>在<code>3.2小节</code>，我们定义了验证变量。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> verify = &#123;</span><br><span class="line">maxWidth: <span class="number">100</span>,</span><br><span class="line">maxHeight: <span class="number">100</span>,</span><br><span class="line">maxSize: <span class="number">1024</span>,</span><br><span class="line">allowSuffixName: [<span class="string">"jpg"</span>, <span class="string">"png"</span>, <span class="string">"bmp"</span>]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>在上面一小节，我们定义了<code>fileSize</code>函数。<br>我们打算加在<code>fileSize</code>函数后面，<strong>注意：<code>fileSize</code>的函数最后要加 <code>逗号&#39;,&#39;</code>。</strong></p><blockquote><p>验证图片宽高是一个很特殊的情况。因为<code>input</code>传递的，是一个文件对象，不是专门的<code>img</code>图片对象，无法直接获取<code>width</code>和<code>height</code>，只能通过<code>new Image()</code>来创建虚拟的图片对象</p></blockquote><p>编写之后如下(代码太多，省略一些)：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">VerifyObj.prototype = &#123;</span><br><span class="line">...</span><br><span class="line"><span class="comment">//是否不为空</span></span><br><span class="line">isNotEmpty : <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;...&#125;,</span><br><span class="line">fileSize : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;...&#125;,</span><br><span class="line">createImgObj : <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.isEmpty(<span class="keyword">this</span>.verify.maxWidth) &amp;&amp; <span class="keyword">this</span>.isEmpty(<span class="keyword">this</span>.verify.maxHeight)) &#123;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">true</span>,<span class="string">""</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建虚拟的img图片，只是为了能获取上传图片的宽和高</span></span><br><span class="line"><span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line">img.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line">callback(&#123;<span class="string">"width"</span>:<span class="keyword">this</span>.width,<span class="string">"height"</span>:<span class="keyword">this</span>.height&#125;);</span><br><span class="line">&#125;;</span><br><span class="line">img.src=<span class="keyword">this</span>.getObjectURL();</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">true</span>,<span class="string">""</span>];</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//获得 图片 路径</span></span><br><span class="line">getObjectURL : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> url = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.createObjectURL != <span class="literal">undefined</span>) &#123; <span class="comment">// basic  </span></span><br><span class="line">url = <span class="built_in">window</span>.createObjectURL(<span class="keyword">this</span>.fileObj);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.URL != <span class="literal">undefined</span>) &#123; <span class="comment">// mozilla(firefox)  </span></span><br><span class="line">url = <span class="built_in">window</span>.URL.createObjectURL(<span class="keyword">this</span>.fileObj.files[<span class="number">0</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.webkitURL != <span class="literal">undefined</span>) &#123; <span class="comment">// webkit or chrome  </span></span><br><span class="line">url = <span class="built_in">window</span>.webkitURL.createObjectURL(<span class="keyword">this</span>.fileObj.files[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> url;</span><br><span class="line">&#125;,</span><br><span class="line">widthAndHeight : <span class="function"><span class="keyword">function</span>(<span class="params">imgAttr</span>) </span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line"><span class="keyword">var</span> width = imgAttr.width;</span><br><span class="line"><span class="keyword">var</span> height = imgAttr.height;</span><br><span class="line"><span class="keyword">var</span> maxWidth = <span class="keyword">this</span>.verify.maxWidth;</span><br><span class="line"><span class="keyword">var</span> maxHeight = <span class="keyword">this</span>.verify.maxHeight;</span><br><span class="line"><span class="comment">//默认宽，高也是符合的</span></span><br><span class="line"><span class="keyword">var</span> wflag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> hflag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.isNotEmpty(maxWidth)) &#123;</span><br><span class="line"><span class="keyword">if</span>(maxWidth != width)&#123;</span><br><span class="line">wflag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.isNotEmpty(maxHeight)) &#123;</span><br><span class="line"><span class="keyword">if</span>(maxHeight != height)&#123;</span><br><span class="line">hflag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">false</span> == wflag || <span class="literal">false</span> == hflag) &#123;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">false</span>, <span class="string">"图片宽高必须是"</span>+maxWidth+<span class="string">"*"</span>+maxHeight+<span class="string">"px"</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">false</span>, <span class="string">""</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后，我们要触发这个函数，所以要在<code>file_verify</code>函数加上<code>case</code>语句。<br>如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">file_verify</span>(<span class="params">fileObj, verify</span>) </span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; retFlag; i++) &#123;</span><br><span class="line"><span class="keyword">switch</span> (i)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">...</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">...</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">...</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">retArr = v.createImgObj(<span class="function"><span class="keyword">function</span>(<span class="params">imgAttr</span>)</span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line">retArr = v.widthAndHeight(imgAttr);</span><br><span class="line"><span class="keyword">if</span> (retArr[<span class="number">1</span>] != <span class="string">""</span>) &#123;</span><br><span class="line"><span class="comment">//清空文件</span></span><br><span class="line">fileObj.outerHTML = fileObj.outerHTML;</span><br><span class="line">alert(retArr[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">...</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">retFlag = retArr[<span class="number">0</span>];</span><br><span class="line">errorMsg = retArr[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>createImgObj</code>函数，主要是创建一个虚拟的<code>img</code>，里面有段代码<code>img.onload = function() {...}</code>，<code>onload</code>是异步加载，最后才执行的，也就是<code>file_verify</code>函数，完全执行完之后，才会触发这个<code>onlaod</code>，所以，这个函数，我们需要用到回调函数<code>callback</code>。<br><code>widthAndHeight</code>函数，才是正在执行判断图片的宽高是否符合规则的函数。</p><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>如上所说，你可以自定义更多的规则变量<code>verify</code>，根据<code>verify</code>在<code>VerifyObj.prototype</code>里面定制属于你自己的函数，像<code>size</code>函数一样，当然<code>验证图片宽高</code>，这种是特殊的情况。除了这个之后，目前并没有发现更多特殊的情况。<br>以下贴上完整的代码。</p><h3 id="5-1-index-html完整代码"><a href="#5-1-index-html完整代码" class="headerlink" title="5.1 index.html完整代码"></a>5.1 <code>index.html</code>完整代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">验证上传文件的合法性写成单独的js</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://code.jquery.com/jquery-1.4.1.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/file_verify.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">/*</span></span><br><span class="line"><span class="undefined"> * 参数： fileObj  文件对象</span></span><br><span class="line"><span class="undefined"> * 参数： verify  验证规则对象</span></span><br><span class="line"><span class="undefined"> *     verify : &#123;</span></span><br><span class="line"><span class="undefined"> *       maxWidth : 100,   --最大宽度</span></span><br><span class="line"><span class="undefined"> *       maxHeight : 100,  --最大高度</span></span><br><span class="line"><span class="javascript"> *       allowSuffixName : [<span class="string">"jpg"</span>, <span class="string">"png"</span>, <span class="string">"bmp"</span>],  -- 允许通过的后缀名格式</span></span><br><span class="line"><span class="javascript"> *       notAllowSuffixName : [<span class="string">"jpg"</span>, <span class="string">"png"</span>, <span class="string">"bmp"</span>],  -- 不允许通过的后缀名格式</span></span><br><span class="line"><span class="javascript"> *       isPreview : <span class="literal">false</span>,   --是否有缩略图， 默认为否</span></span><br><span class="line"><span class="undefined"> *       maxSize : 1024,   --允许文件最大大小，单位是KB</span></span><br><span class="line"><span class="undefined"> *     &#125;</span></span><br><span class="line"><span class="undefined"> * */</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">verifyFile</span>(<span class="params">fileObj</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">debugger</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> verify = &#123;</span></span><br><span class="line"><span class="undefined">       maxWidth : 100,   </span></span><br><span class="line"><span class="undefined">       maxHeight : 100,  </span></span><br><span class="line"><span class="undefined">       maxSize : 1000,</span></span><br><span class="line"><span class="javascript">       allowSuffixName : [<span class="string">"jpg"</span>, <span class="string">"png"</span>, <span class="string">"bmp"</span>], </span></span><br><span class="line"><span class="javascript">       notAllowSuffixName : [<span class="string">"jpg"</span>, <span class="string">"png"</span>, <span class="string">"bmp"</span>]</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">file_verify(fileObj,verify);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">选择文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"uploadFile"</span> <span class="attr">onchange</span>=<span class="string">"verifyFile(this)"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-2-file-verify-js完整代码"><a href="#5-2-file-verify-js完整代码" class="headerlink" title="5.2 file_verify.js完整代码"></a>5.2 <code>file_verify.js</code>完整代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 外部调用的方法</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; fileObj 要验证的文件对象</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; verify  规则参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">file_verify</span>(<span class="params">fileObj, verify</span>) </span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line"><span class="keyword">var</span> v = <span class="keyword">new</span> VerifyObj(fileObj, verify);</span><br><span class="line"><span class="keyword">var</span> retArr = [];</span><br><span class="line"><span class="keyword">var</span> retFlag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> errorMsg = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; retFlag; i++) &#123;</span><br><span class="line"><span class="keyword">switch</span> (i)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">retArr = v.hasFile();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">retArr = v.suffixByAllow();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">retArr = v.fileSize();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">retArr = v.createImgObj(<span class="function"><span class="keyword">function</span>(<span class="params">imgAttr</span>)</span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line">retArr = v.widthAndHeight(imgAttr);</span><br><span class="line"><span class="keyword">if</span> (retArr[<span class="number">1</span>] != <span class="string">""</span>) &#123;</span><br><span class="line"><span class="comment">//清空文件</span></span><br><span class="line">fileObj.outerHTML = fileObj.outerHTML; </span><br><span class="line">alert(retArr[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">retArr = [<span class="literal">false</span>, <span class="string">""</span>];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">retFlag = retArr[<span class="number">0</span>];</span><br><span class="line">errorMsg = retArr[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (errorMsg != <span class="string">""</span>) &#123;</span><br><span class="line"><span class="comment">//清空文件</span></span><br><span class="line">fileObj.outerHTML = fileObj.outerHTML; </span><br><span class="line">alert(errorMsg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义验证对象，设置属性和方法</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; fileObj 要验证的文件对象</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; verify  规则参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">VerifyObj</span>(<span class="params">fileObj, verify</span>) </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.fileObj = fileObj;</span><br><span class="line"><span class="keyword">this</span>.verify = verify;</span><br><span class="line">&#125;</span><br><span class="line">VerifyObj.prototype = &#123;</span><br><span class="line"><span class="keyword">constructor</span> : VerifyObj,</span><br><span class="line">hasFile : function() &#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line"><span class="keyword">return</span> [<span class="keyword">this</span>.fileObj.files.length &gt; <span class="number">0</span> ? <span class="literal">true</span> : <span class="literal">false</span>,<span class="string">""</span>];  </span><br><span class="line">&#125;,</span><br><span class="line">suffixByAllow : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line"><span class="keyword">var</span> allow = <span class="keyword">this</span>.verify.allowSuffixName;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.isEmpty(allow)) &#123;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">true</span>, <span class="string">""</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> filename = <span class="keyword">this</span>.fileObj.files[<span class="number">0</span>].name;</span><br><span class="line"><span class="keyword">var</span> suffix = filename.substr(filename.lastIndexOf(<span class="string">"."</span>)+<span class="number">1</span>).toLowerCase();</span><br><span class="line"><span class="keyword">var</span> index = jQuery.inArray(suffix, allow);</span><br><span class="line"><span class="keyword">return</span> index != <span class="number">-1</span> ? [<span class="literal">true</span>,<span class="string">""</span>] : [<span class="literal">false</span>,<span class="string">"文件不合法,暂只支持["</span> + allow.join(<span class="string">"、"</span>) + <span class="string">"]格式!"</span>];</span><br><span class="line">&#125;,</span><br><span class="line">isEmpty : <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> !<span class="keyword">this</span>.isNotEmpty(str);</span><br><span class="line">&#125;,</span><br><span class="line">isNotEmpty : <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(str != <span class="literal">undefined</span> &amp;&amp; str != <span class="literal">null</span> &amp;&amp; str != <span class="string">''</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;,</span><br><span class="line">fileSize : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line"><span class="keyword">var</span> maxSize = <span class="keyword">this</span>.verify.maxSize;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.isEmpty(maxSize)) &#123;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">true</span>, <span class="string">""</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//单位为字节，即B；size/1024转换为KB</span></span><br><span class="line"><span class="keyword">var</span> size = <span class="keyword">this</span>.fileObj.files[<span class="number">0</span>].size / <span class="number">1024</span>;</span><br><span class="line"><span class="keyword">if</span> (maxSize &lt; size) &#123;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">false</span>, <span class="string">"文件大小不能超过"</span> + maxSize + <span class="string">"KB"</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">true</span>, <span class="string">""</span>];</span><br><span class="line">&#125;,</span><br><span class="line">createImgObj : <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.isEmpty(<span class="keyword">this</span>.verify.maxWidth) &amp;&amp; <span class="keyword">this</span>.isEmpty(<span class="keyword">this</span>.verify.maxHeight)) &#123;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">true</span>,<span class="string">""</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建虚拟的img图片，只是为了能获取上传图片的宽和高</span></span><br><span class="line"><span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line">img.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line">callback(&#123;<span class="string">"width"</span>:<span class="keyword">this</span>.width,<span class="string">"height"</span>:<span class="keyword">this</span>.height&#125;);</span><br><span class="line">&#125;;</span><br><span class="line">img.src=<span class="keyword">this</span>.getObjectURL();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> [<span class="literal">true</span>,<span class="string">""</span>];</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//获得 图片 路径</span></span><br><span class="line">getObjectURL : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> url = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.createObjectURL != <span class="literal">undefined</span>) &#123; <span class="comment">// basic  </span></span><br><span class="line">url = <span class="built_in">window</span>.createObjectURL(<span class="keyword">this</span>.fileObj);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.URL != <span class="literal">undefined</span>) &#123; <span class="comment">// mozilla(firefox)  </span></span><br><span class="line">url = <span class="built_in">window</span>.URL.createObjectURL(<span class="keyword">this</span>.fileObj.files[<span class="number">0</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.webkitURL != <span class="literal">undefined</span>) &#123; <span class="comment">// webkit or chrome  </span></span><br><span class="line">url = <span class="built_in">window</span>.webkitURL.createObjectURL(<span class="keyword">this</span>.fileObj.files[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> url;</span><br><span class="line">&#125;,</span><br><span class="line">widthAndHeight : <span class="function"><span class="keyword">function</span>(<span class="params">imgAttr</span>) </span>&#123;</span><br><span class="line"><span class="keyword">debugger</span>;</span><br><span class="line"><span class="keyword">var</span> width = imgAttr.width;</span><br><span class="line"><span class="keyword">var</span> height = imgAttr.height;</span><br><span class="line"><span class="keyword">var</span> maxWidth = <span class="keyword">this</span>.verify.maxWidth;</span><br><span class="line"><span class="keyword">var</span> maxHeight = <span class="keyword">this</span>.verify.maxHeight;</span><br><span class="line"><span class="comment">//默认宽，高也是符合的</span></span><br><span class="line"><span class="keyword">var</span> wflag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> hflag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.isNotEmpty(maxWidth)) &#123;</span><br><span class="line"><span class="keyword">if</span>(maxWidth != width)&#123;</span><br><span class="line">wflag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.isNotEmpty(maxHeight)) &#123;</span><br><span class="line"><span class="keyword">if</span>(maxHeight != height)&#123;</span><br><span class="line">hflag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">false</span> == wflag || <span class="literal">false</span> == hflag) &#123;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">false</span>, <span class="string">"图片宽高必须是"</span>+maxWidth+<span class="string">"*"</span>+maxHeight+<span class="string">"px"</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> [<span class="literal">false</span>, <span class="string">""</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-js-验证文件-file-合法性&quot;&gt;&lt;a href=&quot;#1-js-验证文件-file-合法性&quot; class=&quot;headerlink&quot; title=&quot;1. js 验证文件 file 合法性&quot;&gt;&lt;/a&gt;1. js 验证文件 file 合法性&lt;/h2&gt;&lt;blockq
      
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="file" scheme="http://yoursite.com/tags/file/"/>
    
  </entry>
  
  <entry>
    <title>Java 发送 Http 请求</title>
    <link href="http://yoursite.com/2018/01/05/http-request/"/>
    <id>http://yoursite.com/2018/01/05/http-request/</id>
    <published>2018-01-05T10:57:47.611Z</published>
    <updated>2018-01-17T09:45:26.743Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java-发送-Http-请求"><a href="#Java-发送-Http-请求" class="headerlink" title="Java 发送 Http 请求"></a>Java 发送 Http 请求</h1><p>发送 <font color="#ff4081"><code>http</code></font> 请求。<br>我把它整理成工具类<br><!--目前所用到的，都是 <font color=#ff4081>`post`</font> 请求。所以，没有整理 <font color=#ff4081>`get`</font> 请求的方法。--></p><ul><li style="list-style: none"><input type="checkbox"> 01/05/2018 新增 发送POST请求</li><li style="list-style: none"><input type="checkbox" checked> 01/17/2018 新增 发送GET请求</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.DataOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.HostnameVerifier;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.HttpsURLConnection;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSession;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zyz</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送Http post请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> reqData 请求数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> URL 请求url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, String&gt; <span class="title">doHttpPost</span><span class="params">(String reqData, String URL)</span> </span>&#123;</span><br><span class="line">    Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"发起的数据:"</span> + reqData);</span><br><span class="line">        <span class="keyword">byte</span>[] xmlData = reqData.getBytes();</span><br><span class="line">        InputStream instr = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URL url = <span class="keyword">new</span> URL(URL);</span><br><span class="line">            URLConnection urlConn = url.openConnection();</span><br><span class="line">            urlConn.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">            urlConn.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">            urlConn.setUseCaches(<span class="keyword">false</span>);</span><br><span class="line">            </span><br><span class="line">            urlConn.setRequestProperty(<span class="string">"Content-length"</span>,</span><br><span class="line">                    String.valueOf(xmlData.length));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//使用Content-Type来表示具体请求中的媒体类型信息。</span></span><br><span class="line">            <span class="comment">//请求数据为 json格式，与下面的语句，2选1</span></span><br><span class="line">            contentTypeIsJson(urlConn);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//请求数据为 变量1=值1&amp;变量2=值2&amp;...</span></span><br><span class="line">            contentTypeIsForm(urlConn);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//你还可以定义更多的contentType...</span></span><br><span class="line">            </span><br><span class="line">            DataOutputStream printout = <span class="keyword">new</span> DataOutputStream(</span><br><span class="line">            urlConn.getOutputStream());</span><br><span class="line">            printout.write(xmlData);</span><br><span class="line">            printout.flush();</span><br><span class="line">            printout.close();</span><br><span class="line">            instr = urlConn.getInputStream();</span><br><span class="line">            <span class="keyword">byte</span>[] bis = input2byte(instr);</span><br><span class="line">            String ResponseString = <span class="keyword">new</span> String(bis, <span class="string">"UTF-8"</span>);</span><br><span class="line">            <span class="keyword">if</span> ((ResponseString == <span class="keyword">null</span>) || (<span class="string">""</span>.equals(ResponseString.trim()))) &#123;</span><br><span class="line">            map.put(<span class="string">"code"</span>, <span class="string">"-1"</span>);</span><br><span class="line">            map.put(<span class="string">"msg"</span>, <span class="string">"返回空"</span>);</span><br><span class="line">            System.out.println(<span class="string">"返回数据为:返回空数据"</span>);</span><br><span class="line">                <span class="keyword">return</span> map;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            map.put(<span class="string">"code"</span>, <span class="string">"1"</span>);</span><br><span class="line">            map.put(<span class="string">"msg"</span>, <span class="string">"返回成功"</span>);</span><br><span class="line">            map.put(<span class="string">"respResult"</span>, ResponseString);</span><br><span class="line">            </span><br><span class="line">            System.out.println(<span class="string">"返回数据为:"</span> + ResponseString);</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            map.put(<span class="string">"code"</span>, <span class="string">"-1"</span>);</span><br><span class="line">            map.put(<span class="string">"msg"</span>, <span class="string">"异常："</span>+e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">            instr.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 请求的媒体类型信息为json</span></span><br><span class="line"><span class="comment">     * 即请求参数为json</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> urlConn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">contentTypeIsJson</span><span class="params">(URLConnection urlConn)</span> </span>&#123;</span><br><span class="line">    urlConn.setRequestProperty(<span class="string">"content-Type"</span>, <span class="string">"application/json"</span>);</span><br><span class="line">    urlConn.setRequestProperty(<span class="string">"charset"</span>, <span class="string">"utf-8"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 请求的媒体类型信息为 &lt;form encType=””&gt; 中默认的encType</span></span><br><span class="line"><span class="comment">     * 即请求参数为表单默认的提交数据的格式</span></span><br><span class="line"><span class="comment">     * 如：变量1=值1&amp;变量2=值2&amp;...</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> urlConn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">contentTypeIsForm</span><span class="params">(URLConnection urlConn)</span> </span>&#123;</span><br><span class="line">    urlConn.setRequestProperty(<span class="string">"Content-type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">    urlConn.setRequestProperty(<span class="string">"accept"</span>, <span class="string">"*/*"</span>);</span><br><span class="line">    urlConn.setRequestProperty(<span class="string">"connection"</span>, <span class="string">"Keep-Alive"</span>);</span><br><span class="line">    urlConn.setRequestProperty(<span class="string">"user-agent"</span>,</span><br><span class="line"><span class="string">"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * inputStream 转 byte[]</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inStream</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] input2byte(InputStream inStream)  </span><br><span class="line">            <span class="keyword">throws</span> IOException &#123;  </span><br><span class="line">        ByteArrayOutputStream swapStream = <span class="keyword">new</span> ByteArrayOutputStream();  </span><br><span class="line">        <span class="keyword">byte</span>[] buff = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">100</span>];  </span><br><span class="line">        <span class="keyword">int</span> rc = <span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">while</span> ((rc = inStream.read(buff, <span class="number">0</span>, <span class="number">100</span>)) &gt; <span class="number">0</span>) &#123;  </span><br><span class="line">            swapStream.write(buff, <span class="number">0</span>, rc);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">byte</span>[] in2b = swapStream.toByteArray();  </span><br><span class="line">        <span class="keyword">return</span> in2b;  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送Http get请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> reqData 请求数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> URL 请求url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, String&gt; <span class="title">doHttpGet</span><span class="params">(String reqData, String URL)</span> </span>&#123;</span><br><span class="line">Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"发起的数据:"</span> + reqData);</span><br><span class="line">    </span><br><span class="line">        InputStream instr = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">        String urlNameString = URL + <span class="string">"?"</span> + reqData;</span><br><span class="line">            URL url = <span class="keyword">new</span> URL(urlNameString);</span><br><span class="line">            </span><br><span class="line">            HostnameVerifier hv = <span class="keyword">new</span> HostnameVerifier() &#123;  </span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(String urlHostName, SSLSession session)</span> </span>&#123;  </span><br><span class="line">                    System.out.println(<span class="string">"Warning: URL Host: "</span> + urlHostName + <span class="string">" vs. "</span>  </span><br><span class="line">                                       + session.getPeerHost());  </span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;  </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;  </span><br><span class="line">            trustAllHttpsCertificates();  </span><br><span class="line">            HttpsURLConnection.setDefaultHostnameVerifier(hv);  </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            URLConnection urlConn = url.openConnection();</span><br><span class="line">            </span><br><span class="line">            urlConn.setRequestProperty(<span class="string">"accept"</span>, <span class="string">"*/*"</span>);</span><br><span class="line">        urlConn.setRequestProperty(<span class="string">"connection"</span>, <span class="string">"Keep-Alive"</span>);</span><br><span class="line">        urlConn.setRequestProperty(<span class="string">"user-agent"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//urlConn.connect();</span></span><br><span class="line">            </span><br><span class="line">            instr = urlConn.getInputStream();</span><br><span class="line">            <span class="keyword">byte</span>[] bis = input2byte(instr);</span><br><span class="line">            String ResponseString = <span class="keyword">new</span> String(bis, <span class="string">"UTF-8"</span>);</span><br><span class="line">            <span class="keyword">if</span> ((ResponseString == <span class="keyword">null</span>) || (<span class="string">""</span>.equals(ResponseString.trim()))) &#123;</span><br><span class="line">            map.put(<span class="string">"code"</span>, <span class="string">"-1"</span>);</span><br><span class="line">            map.put(<span class="string">"msg"</span>, <span class="string">"返回空"</span>);</span><br><span class="line">            System.out.println(<span class="string">"返回数据为:返回空数据"</span>);</span><br><span class="line">                <span class="keyword">return</span> map;</span><br><span class="line">            &#125;</span><br><span class="line">            map.put(<span class="string">"code"</span>, <span class="string">"1"</span>);</span><br><span class="line">            map.put(<span class="string">"msg"</span>, <span class="string">"返回成功"</span>);</span><br><span class="line">            map.put(<span class="string">"respResult"</span>, ResponseString);</span><br><span class="line">            </span><br><span class="line">            System.out.println(<span class="string">"返回数据为:"</span> + ResponseString);</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            map.put(<span class="string">"code"</span>, <span class="string">"-1"</span>);</span><br><span class="line">            map.put(<span class="string">"msg"</span>, <span class="string">"异常："</span>+e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">            instr.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">trustAllHttpsCertificates</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;  </span><br><span class="line">        javax.net.ssl.TrustManager[] trustAllCerts = <span class="keyword">new</span> javax.net.ssl.TrustManager[<span class="number">1</span>];  </span><br><span class="line">        javax.net.ssl.TrustManager tm = <span class="keyword">new</span> miTM();  </span><br><span class="line">        trustAllCerts[<span class="number">0</span>] = tm;  </span><br><span class="line">        javax.net.ssl.SSLContext sc = javax.net.ssl.SSLContext  </span><br><span class="line">                .getInstance(<span class="string">"SSL"</span>);  </span><br><span class="line">        sc.init(<span class="keyword">null</span>, trustAllCerts, <span class="keyword">null</span>);  </span><br><span class="line">        javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory(sc  </span><br><span class="line">                .getSocketFactory());  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">miTM</span> <span class="keyword">implements</span> <span class="title">javax</span>.<span class="title">net</span>.<span class="title">ssl</span>.<span class="title">TrustManager</span>,  </span></span><br><span class="line"><span class="class">            <span class="title">javax</span>.<span class="title">net</span>.<span class="title">ssl</span>.<span class="title">X509TrustManager</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">public</span> java.security.cert.X509Certificate[] getAcceptedIssuers() &#123;  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isServerTrusted</span><span class="params">(  </span></span></span><br><span class="line"><span class="function"><span class="params">                java.security.cert.X509Certificate[] certs)</span> </span>&#123;  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isClientTrusted</span><span class="params">(  </span></span></span><br><span class="line"><span class="function"><span class="params">                java.security.cert.X509Certificate[] certs)</span> </span>&#123;  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkServerTrusted</span><span class="params">(  </span></span></span><br><span class="line"><span class="function"><span class="params">                java.security.cert.X509Certificate[] certs, String authType)</span>  </span></span><br><span class="line"><span class="function">                <span class="keyword">throws</span> java.security.cert.CertificateException </span>&#123;  </span><br><span class="line">            <span class="keyword">return</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkClientTrusted</span><span class="params">(  </span></span></span><br><span class="line"><span class="function"><span class="params">                java.security.cert.X509Certificate[] certs, String authType)</span>  </span></span><br><span class="line"><span class="function">                <span class="keyword">throws</span> java.security.cert.CertificateException </span>&#123;  </span><br><span class="line">            <span class="keyword">return</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java-发送-Http-请求&quot;&gt;&lt;a href=&quot;#Java-发送-Http-请求&quot; class=&quot;headerlink&quot; title=&quot;Java 发送 Http 请求&quot;&gt;&lt;/a&gt;Java 发送 Http 请求&lt;/h1&gt;&lt;p&gt;发送 &lt;font color=&quot;#f
      
    
    </summary>
    
    
      <category term="http" scheme="http://yoursite.com/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>MD5 加密</title>
    <link href="http://yoursite.com/2018/01/05/md5-encipher/"/>
    <id>http://yoursite.com/2018/01/05/md5-encipher/</id>
    <published>2018-01-05T05:39:33.694Z</published>
    <updated>2018-01-05T10:33:51.817Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MD5-加密"><a href="#MD5-加密" class="headerlink" title="MD5 加密"></a>MD5 加密</h1><!--**<font color=#ff4081>`ctrl+M`</font>**--><p>网上md5加密各式各样的，现在把自己用的这一份整理处理吧。<br>目前只有加密，没有解密，以后如果有用到其它的，就再新增吧。</p><ul><li><ul><li style="list-style: none"><input type="checkbox" checked> MD5加密 -&gt; 32位密文</li></ul></li></ul><h2 id="上代码"><a href="#上代码" class="headerlink" title="上代码"></a><font color="blue">上代码</font></h2><blockquote><h6 id="1-MD5加密-gt-32位密文"><a href="#1-MD5加密-gt-32位密文" class="headerlink" title="1. MD5加密 -&gt; 32位密文"></a>1. MD5加密 -&gt; 32位密文</h6><blockquote><p>可用&nbsp;&nbsp;<font color="#ff4081"><code>toUpperCase()</code></font> 转成大写<br>可用&nbsp;&nbsp;<font color="#ff4081"><code>toLowerCase()</code></font> 转成小写</p></blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MD5加密类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MD5Utils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Used building output as Hex</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">char</span>[] DIGITS = &#123; <span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对字符串进行MD5加密</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> text 明文</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 密文</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">md5</span><span class="params">(String text)</span> </span>&#123;</span><br><span class="line">MessageDigest msgDigest = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">msgDigest = MessageDigest.getInstance(<span class="string">"MD5"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"System doesn't support MD5 algorithm."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 使用utf-8进行编码</span></span><br><span class="line">msgDigest.update(text.getBytes(<span class="string">"UTF-8"</span>));</span><br><span class="line">&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"System doesn't support your  EncodingException."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">byte</span>[] bytes = msgDigest.digest();</span><br><span class="line">String md5Str = <span class="keyword">new</span> String(encodeHex(bytes));</span><br><span class="line"><span class="keyword">return</span> md5Str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">char</span>[] encodeHex(<span class="keyword">byte</span>[] data) &#123;</span><br><span class="line"><span class="keyword">int</span> l = data.length;</span><br><span class="line"><span class="keyword">char</span>[] out = <span class="keyword">new</span> <span class="keyword">char</span>[l &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="comment">// two characters form the hex value.</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; l; i++) &#123;</span><br><span class="line">out[j++] = DIGITS[(<span class="number">0xF0</span> &amp; data[i]) &gt;&gt;&gt; <span class="number">4</span>];</span><br><span class="line">out[j++] = DIGITS[<span class="number">0x0F</span> &amp; data[i]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MD5-加密&quot;&gt;&lt;a href=&quot;#MD5-加密&quot; class=&quot;headerlink&quot; title=&quot;MD5 加密&quot;&gt;&lt;/a&gt;MD5 加密&lt;/h1&gt;&lt;!--**&lt;font color=#ff4081&gt;`ctrl+M`&lt;/font&gt;**--&gt;
&lt;p&gt;网上md5加密
      
    
    </summary>
    
    
      <category term="MD5" scheme="http://yoursite.com/tags/MD5/"/>
    
  </entry>
  
  <entry>
    <title>欢迎使用 Cmd Markdown 编辑阅读器</title>
    <link href="http://yoursite.com/2017/12/18/example/"/>
    <id>http://yoursite.com/2017/12/18/example/</id>
    <published>2017-12-18T03:32:50.457Z</published>
    <updated>2017-12-18T07:44:14.092Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎使用-Cmd-Markdown-编辑阅读器"><a href="#欢迎使用-Cmd-Markdown-编辑阅读器" class="headerlink" title="欢迎使用 Cmd Markdown 编辑阅读器"></a>欢迎使用 Cmd Markdown 编辑阅读器</h1><hr><h2 id="T-n-Theta-n"><a href="#T-n-Theta-n" class="headerlink" title="$T(n) = \Theta(n)$"></a>$T(n) = \Theta(n)$</h2><h2 id="E-mc-2"><a href="#E-mc-2" class="headerlink" title="$E=mc^2$"></a>$E=mc^2$</h2><p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：</p><blockquote><ul><li>整理知识，学习笔记</li><li>发布日记，杂文，所见所想</li><li>撰写发布技术文稿（代码支持）</li><li>撰写发布学术论文（LaTeX 公式支持）</li></ul></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo" title="">                </div>                <div class="image-caption">cmd-markdown-logo</div>            </figure><p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p><h3 id="Windows-Mac-Linux-全平台客户端"><a href="#Windows-Mac-Linux-全平台客户端" class="headerlink" title="Windows/Mac/Linux 全平台客户端"></a><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="noopener">Windows/Mac/Linux 全平台客户端</a></h3><blockquote><p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class="icon-file"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p></blockquote><hr><h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p><h3 id="1-制作一份待办事宜-Todo-列表"><a href="#1-制作一份待办事宜-Todo-列表" class="headerlink" title="1. 制作一份待办事宜 Todo 列表"></a>1. 制作一份待办事宜 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表" target="_blank" rel="noopener">Todo 列表</a></h3><ul><li style="list-style: none"><input type="checkbox"> 支持以 PDF 格式导出文稿</li><li style="list-style: none"><input type="checkbox"> 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li><li style="list-style: none"><input type="checkbox" checked> 新增 Todo 列表功能</li><li style="list-style: none"><input type="checkbox" checked> 修复 LaTex 公式渲染问题</li><li style="list-style: none"><input type="checkbox" checked> 新增 LaTex 公式编号功能</li></ul><h3 id="2-书写一个质能守恒公式-LaTeX"><a href="#2-书写一个质能守恒公式-LaTeX" class="headerlink" title="2. 书写一个质能守恒公式[^LaTeX]"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E=mc^2$$</p><h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'hello world'</span></span><br></pre></td></tr></table></figure><h3 id="4-高效绘制-流程图"><a href="#4-高效绘制-流程图" class="headerlink" title="4. 高效绘制 流程图"></a>4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图" target="_blank" rel="noopener">流程图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start</span><br><span class="line">op=&gt;operation: Your Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><h3 id="5-高效绘制-序列图"><a href="#5-高效绘制-序列图" class="headerlink" title="5. 高效绘制 序列图"></a>5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图" target="_blank" rel="noopener">序列图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure><h3 id="6-高效绘制-甘特图"><a href="#6-高效绘制-甘特图" class="headerlink" title="6. 高效绘制 甘特图"></a>6. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图" target="_blank" rel="noopener">甘特图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">title 项目开发流程</span><br><span class="line">section 项目确定</span><br><span class="line">    需求分析       :a1, 2016-06-22, 3d</span><br><span class="line">    可行性报告     :after a1, 5d</span><br><span class="line">    概念验证       : 5d</span><br><span class="line">section 项目实施</span><br><span class="line">    概要设计      :2016-07-05  , 5d</span><br><span class="line">    详细设计      :2016-07-08, 10d</span><br><span class="line">    编码          :2016-07-15, 10d</span><br><span class="line">    测试          :2016-07-22, 5d</span><br><span class="line">section 发布验收</span><br><span class="line">    发布: 2d</span><br><span class="line">    验收: 3d</span><br></pre></td></tr></table></figure><h3 id="7-绘制表格"><a href="#7-绘制表格" class="headerlink" title="7. 绘制表格"></a>7. 绘制表格</h3><table><thead><tr><th>项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td>计算机</td><td style="text-align:right">\$1600</td><td style="text-align:center">5</td></tr><tr><td>手机</td><td style="text-align:right">\$12</td><td style="text-align:center">12</td></tr><tr><td>管线</td><td style="text-align:right">\$1</td><td style="text-align:center">234</td></tr></tbody></table><h3 id="8-更详细语法说明"><a href="#8-更详细语法说明" class="headerlink" title="8. 更详细语法说明"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="noopener">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册" target="_blank" rel="noopener">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p><p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p><hr><h2 id="什么是-Cmd-Markdown"><a href="#什么是-Cmd-Markdown" class="headerlink" title="什么是 Cmd Markdown"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p><h3 id="1-实时同步预览"><a href="#1-实时同步预览" class="headerlink" title="1. 实时同步预览"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p><h3 id="2-编辑工具栏"><a href="#2-编辑工具栏" class="headerlink" title="2. 编辑工具栏"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.zybuluo.com/static/img/toolbar-editor.png" alt="tool-editor" title="">                </div>                <div class="image-caption">tool-editor</div>            </figure><h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3. 编辑模式"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p><h3 id="4-实时的云端文稿"><a href="#4-实时的云端文稿" class="headerlink" title="4. 实时的云端文稿"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p><h3 id="5-离线模式"><a href="#5-离线模式" class="headerlink" title="5. 离线模式"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p><h3 id="6-管理工具栏"><a href="#6-管理工具栏" class="headerlink" title="6. 管理工具栏"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.zybuluo.com/static/img/toolbar-manager.jpg" alt="tool-manager" title="">                </div>                <div class="image-caption">tool-manager</div>            </figure><p>通过管理工具栏可以：</p><p><i class="icon-share"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class="icon-file"></i> 新建：开始撰写一篇新的文稿<br><i class="icon-trash"></i> 删除：删除当前的文稿<br><i class="icon-cloud"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class="icon-reorder"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class="icon-pencil"></i> 模式：切换 普通/Vim/Emacs 编辑模式</p><h3 id="7-阅读工具栏"><a href="#7-阅读工具栏" class="headerlink" title="7. 阅读工具栏"></a>7. 阅读工具栏</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.zybuluo.com/static/img/toolbar-reader.jpg" alt="tool-manager" title="">                </div>                <div class="image-caption">tool-manager</div>            </figure><p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p><p>工具栏上的五个图标依次为：</p><p><i class="icon-list"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class="icon-chevron-sign-left"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class="icon-adjust"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class="icon-desktop"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class="icon-fullscreen"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p><h3 id="8-阅读模式"><a href="#8-阅读模式" class="headerlink" title="8. 阅读模式"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class="icon-desktop"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p><h3 id="9-标签、分类和搜索"><a href="#9-标签、分类和搜索" class="headerlink" title="9. 标签、分类和搜索"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p><p>标签： 未分类</p><p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.zybuluo.com/static/img/file-list.png" alt="file-list" title="">                </div>                <div class="image-caption">file-list</div>            </figure><h3 id="10-文稿发布和分享"><a href="#10-文稿发布和分享" class="headerlink" title="10. 文稿发布和分享"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p><hr><p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class="icon-file"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p><p>作者 <a href="http://weibo.com/ghosert" target="_blank" rel="noopener">@ghosert</a><br>2016 年 07月 07日    </p><p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 参考更多使用方法。</p><p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;欢迎使用-Cmd-Markdown-编辑阅读器&quot;&gt;&lt;a href=&quot;#欢迎使用-Cmd-Markdown-编辑阅读器&quot; class=&quot;headerlink&quot; title=&quot;欢迎使用 Cmd Markdown 编辑阅读器&quot;&gt;&lt;/a&gt;欢迎使用 Cmd Markdown
      
    
    </summary>
    
    
      <category term="Cmd" scheme="http://yoursite.com/tags/Cmd/"/>
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
  </entry>
  
</feed>
